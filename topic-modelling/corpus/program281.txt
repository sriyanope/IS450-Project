<DOC>
object oriented java programming data structures and beyond
this covers intermediate topics in software development objectoriented programming principles that will allow you to use java to its full potential and implement data structures and algorithms for organizing large amounts of data in a way that is both efficient and easy to with also practice critically evaluating your own code and build technical communication that will help you prepare for job interviews and collaborative as a software engineer in the final capstone project apply your to analyze data collected from a realworld social network google has contributed realworld projects and the involvement of its engineers as guest lecturers to these courses a small select group of top learners who complete the will be offered practice interviews with google recruiters invitation to a practice interview does not guarantee an actual interview or employment
</DOC>

<DOC>
capstone analyzing social network data
capstone project combine all of the from all four courses to do something really fun analyze social networks
the for learning are practically endless in a social network who are the influential members of the network what are the subcommunities in the network who is connected to whom and by how many links these are just some of the questions you can explore project provide you with a realworld data set and some infrastructure for getting started as as some warm up tasks and basic project requirements but then itll be up to you where you want to take the project if youre running short on ideas have several suggested directions that can help get your creativity and imagination going finally to integrate the you acquired in and to show off your project be asked to create a showcase of your final product
</DOC>
<DOC>introduction and warm up
welcome to our capstone project in the last four courses youve learned many core data structures and algorithms and applied them to three different realworld projects capstone project be doing a project very much like the projects from these other courses only it will be almost entirely directed by you first get warmed up by playing around with the data that will form the backbone of this project social network data then get back into writing code by implementing a couple of graph algorithms to answer questions about this data
welcome and introduction capstone project exemplar project and timeline introduction to some social network data representing social network data as a graph warm up algorithm extracting egonets warm up algorithm strongly connected components warm up algorithm strongly connected components part
</DOC>

<DOC>project definition and scope
now that youre warmed up its time to get started planning for the bulk of your capstone project identify several questions youd like to answer about the social network data for each of these questions research and evaluate data structures and algorithms that would be useful in implementing a solution defining the scope of your project and anticipating bottlenecks and tricky spots is tough but extremely valuable use asymptotic analysis to guide and refine your design
introduction project idea information flow in a social network project idea broadcasting to a twitter network part project idea broadcasting to a twitter network part project idea detecting communities analyzing algorithms before implementing
</DOC>

<DOC>capstone implementation miniproject
now that youve identified the two problems you want to solve to solve the easier of the two you are predominately on your own to independently to solve the problem likely create small datasets for testing research existing solutions to related problems implement a solution test your solution and analyze the algorithmic runtime of the solution you can optionally writeup a report of your for peerreview feedback
introduction of report
</DOC>

<DOC>capstone implementation full project checkpoint
on your own on the larger problem you aim to solve have two weeks this and the next to solve the larger problem and submit a report for peer feedback for you should aim to create small test datasets research exist solutions and analyze the runtime of your potential solutions you should also research datasets which might be particularly interesting for your problem
</DOC>

<DOC>capstone implementation full project final deadline
now you get to finalize your project finish your solution to the larger problem and submit a report for peer feedback this is also an for reflection about what went and what went poorly in the process of completing the project it is also an to reflect on how far your technical have advanced since the beginning of this
introduction peer review best practices
</DOC>

<DOC>capstone oral report
you get to present your project to the learner community this will combine all the youve learned in the algorithm analysis object oriented programming design and use of data structures and presenting your with confidence we look forward to seeing what youve created
introduction demo presentation end of message
</DOC>
<DOC>
mastering the software engineering interview
youve hit a major milestone as a computer scientist and are becoming a capable programmer you now know how to solve problems write algorithms and analyze solutions
and you have a wealth of tools like data structures at your disposal you may now be ready for an internship or possibly an entrylevel software engineering job but can you land the internshipjob it depends in part on how you can solve new technical problems and communicate during interviews how can you get better at this practice
with the support of googles recruiting and engineering teams weve provided tips examples and practice that may help you with a number of tech companies assist you to organize into teams to practice lastly give you basic job search advice and tips for succeeding once youre on the job
</DOC>
<DOC>welcome what is a software engineering interview
welcome to our on effectively communicating your technical abilities this focuses on landing a technical job and excelling in a technical role to succeed in job interviews need to be able to confidently articulate your ability to solve challenging problems and come up with new solutions under potentially stressful conditions after getting a technical job the role of communication increases even more need to with other members of the team communicate technical challenges and successes and potentially sell the value of your to those outside the company our goal is that by the end of this each and every one of you understands the importance of technical communication and has received constructive feedback on areas of potential improvement in achieving this goal also about algorithmic thinking on the fly how to evaluate a good interview answer to a difficult technical problem and how soft impact interview begin to see what a technical interview looks like from the perspective of a major tech company then focus on how to best get the interview in the first place if youre not in the job market right now you might want to skim the and skip ahead to the resume critique for insights about how to present yourself in writing or the introductions on effectively presenting yourself in person
introduction goals why soft google engineers share their stories the application process preparing for the interview researching the company effective resumes resume critique recap people involved what is a technical phone screen or interview what is an inperson interview when i struggled overcoming a tough interview the value of your introduction good and bad example introductions
</DOC>

<DOC>welcome what is a software engineering interview lesson choices
reading peer review
</DOC>

<DOC>live coding the technical phone interview and beyond
now that youve gotten warmed up its time to practice your coding one of the things almost certainly be asked to do during a technical phone interview is to code up a solution to a problem in a shared text document eg google doc while you are on the phone with the interviewer this can be intimidating unfamiliar and humbling if you are not prepared so give you lots of practice and tips for getting through this part of the interview with flying colors
welcome and introduction to live coding cold live coding walkthrough sample demonstrating key pitfalls talking through processes getting started getting stuck and recovering from mistakes correctness and testing a very good phone interview when i struggled a first technical phone interview imposter syndrome and stereotype threat growth mindset imposter syndrome gallery
</DOC>

<DOC>explaining what youve already done
were going to focus on how to speak about your working on projects and how to speak about the technical problems youve experienced and how youve solved those problems introduce the star situation task action results model for presenting your and discuss how to and how not to present the problem you worked on and the solution you developed also discuss the communication that are critical to this task its a fun with lots of examples both good and bad which ends with an where present your own on and submit this for peer review
welcome and introduction to personal narrative sample pitch broadly technical sample pitch nontechnical sample pitch technical personal narrative key aspects making the problem compelling common pitfall mixing problem and solution common pitfall assuming too much presenting your solution common pitfall in the weeds common pitfall chronology visual aids eye contact speaking and projecting excitement when i struggled a surprising discovery responding to your audience describing a group project
</DOC>

<DOC>explaining what youve already done lesson choices
peer review discussion prompt
</DOC>

<DOC>algorithmic thinking on the fly
as we saw in coding on the fly can be a difficult task final of the revisit the of live problem solving by looking at how to solve more challenging algorithmic problems and write the code associated with the solution on the whiteboard recognize these problems as classic interview problems youve probably heard a lot about designed to test your problem solving as as your analysis and coding abilities dont worry teach you how to approach them with confidence through a step process to addressing technical questions hint you dont have to produce the perfect solution on the first try show you how to use this process in a number of examples but of there is no substitute for practice so set you up with how to train and evaluate yourself
welcome to algorithmic problem solving algorithmic problem solving and interviews case study introduction case study a first solution case study working at the whiteboard case study going deeper case study next steps when i struggled dealing with nerves in the real world advice evaluation criteria highlights from a good mock interview pitfalls in a bad mock interview whats next end of message appendix fulllength mock phone interview appendix fulllength mock bad inperson interview appendix fulllength mock good inperson interview
</DOC>
<DOC>
data structures and performance
how do java programs deal with vast quantities of data many of the data structures and algorithms that with introductory toy examples break when applications process real large data sets efficiency is critical but how do we achieve it and how do we even measure it
this is an intermediate java we recommend this to learners who have previous in software development or a background in computer science and in particular we recommend that you have taken the first which also requires some previous with java use and analyze data structures that are used in industrylevel applications such as linked lists trees and hashtables explain how these data structures make programs more efficient and flexible apply asymptotic bigo analysis to describe the performance of algorithms and evaluate which strategy to use for efficient data retrieval addition of new data deletion of elements andor memory usage the build throughout this allows its user to manage manipulate and reason about large sets of textual data this is an intermediate java and build on your prior knowledge this is designed around the same series as in our first including explanations of core content learner student and engineer testimonials and support to better allow you to choose your own path through the
</DOC>
<DOC>introduction to the
welcome to the first in the second of our intermediate java programming start with introductions again to ourselves the google engineers and the structure of the after the introduction have a short warm up to get you comfortable with the code be building on to this class but dont worryno graded programming yet is all about getting comfortable and excited to
title welcome object oriented java programming data structures and beyond welcome object oriented programming in java your path through the concept challenges in the real world welcome from google engineers project prototype
</DOC>

<DOC>working with strings
were going to dive into the programming project in the first lesson about strings and regular expressions and in the programming apply that knowledge to adding functionality to your text editor so that it can measure the readability of text by calculating something called the flesch readability score this is focused on building code that not only does interesting things but also finishes them quickly so lets get started building some code
introduction project core introduction to the flesch readability score core basics of strings in java core working with strings in java support foreach loops part of support foreach loops part of support foreach loops part of support foreach loops part of support foreach loops part of core introduction to regular expressions when i struggled regular expressions concept challenge regular expressions support more with regular expressions project programming walk through
</DOC>

<DOC>efficiency analysis and benchmarking
welcome to the texteditor application you worked with last does something but it doesnt do it particularly fast start talking about efficiency introduce the concept of bigo notation which sounds a little silly but is really a powerful and extremely common way of analyzing a programs efficiency independent of the system that its running on and the exact details of how its implemented then go the other direction and dive into the details talking about how to measure the actual running time of a piece of code to get an idea of how it really performs in practice
introduction project in the real world efficiency core our motivation for asymptotic analysis core counting operations core introduction to asymptotic analysis part core introduction to asymptotic analysis part core computing big o with consecutive operations core computing big o with nested operations concept challenge classifying functions using big o support analyzing selection sort concept challenge estimating big o from code core worst best and average cases in the real world worst case analysis core analyzing search algorithms core analyzing sorting algorithms when i struggled algorithm performance core merge sort core a of sorting core common pitfalls in asymptotic analysis core introduction to benchmarking core using java time core analyzing timings concept challenge relating timing data to algorithm analysis project project walk through
</DOC>

<DOC>interfaces linked lists vs arrays and correctness
start talking about some of the basic concepts that one expects to find in a data structures the idea of data abstraction and a data structure called a linked list even though linked lists are not very efficient structures for the most part they do hit home the idea of linking pieces of data together in your computers memory rather than storing the data in one contiguous region this linking idea will be central to many of the more advanced data structures namely trees and graphs that are coming up later and in the next also tools and procedures for unit testing your code which is a way to make sure that what youve written is correct and a staple practice of any sophisticated software developer
introduction project core introduction to abstraction in the real world data abstraction core linked lists vs arrays in the real world lists vs arrays core generics and exceptions core java code for a linked list concept challenge implementing linked lists a first attempt concept challenge drawing linked lists second attempt support adding to a linked list when i struggled data structures core testing and confidence in the real world how can the compiler help with testing core testing practices in the real world how do you test the behavior of code support junit in eclipse in the real world unit testing core testing linked lists get method concept challenge which tests should you run in the real world testdriven development project linked list walk through when i struggled confidence in code core markov text generation core implementing markov text generation optional project markov text generation walk through
</DOC>

<DOC>trees including binary search trees and tries
welcome to we know youve been working hard we hope you tried that optional markov text generation programming last but if not no worries you can always go back and do it later spoiler alert its pretty amazing that such a simple algorithm can produce such realistic text theres more fun and hard as we about trees trees rely on the same linked structure idea as linked lists only theyre much faster usually in the project add autocomplete to your text editor believe us when we say its so cool when you get it working see and we bet you cant wait for the programming now
introduction project core trees in the real world trees core defining trees core binary trees core preorder traversals core postorder inorder and levelorder traversals breadthfirst search when i struggled why traverse a tree core introduction to binary search trees core searching in a bst support code for bsts find method core inserting into a bst support code for bsts insert method core deleting from a bst concept challenge bst shape core performance of bsts and balancing part core performance of bsts and balancing part core introduction to tries core performance of tries core implementing a trie project project walk through
</DOC>

<DOC>hash maps and edit distance
you made it to the last congratulations on getting this far last be looking at a fundamental data structure called a hash table if you thought trees were fast just wait until you see what hash tables can do your last programming will add spelling correction suggestions to your text editor and theres an optional that builds on the same ideas as the main too if you have the time and energy
introduction project core hash tables core collisions in hash tables when i struggled hash tables core applications of hash tables support modular arithmetic concept challenge hash tables core core algorithm core edit distance project spelling suggestions walk through project word path walk through core congratulations
</DOC>
<DOC>
object oriented programming in java
welcome to our on object oriented programming in java using data visualization people come to this with many different goals and we are really excited to with all of you some of you want to be software developers others want to improve your programming to implement that cool personal project that youve been thinking about while others of you might not yet know why youre here and are trying to figure out what this is all about
this is an intermediate java we recommend this to learners who have previous in software development or a background in computer science our goal is that by the end of this each and every one of you feels empowered to create a java thats more advanced than any you have created in the past and that is personally interesting to you in achieving this goal also the fundamentals of object oriented programming how to leverage the power of existing libraries how to build graphical user interfaces and how to use some core algorithms for searching and sorting data and this is projectbased so dive right into the project immediately we are excited to be offering a unique structure designed to support learners of different backgrounds in succeeding at their own pace the first explains how this will and if this is right for you we also recommend taking a few minutes to explore the site a good place to start is the navigation bar on the left click content to see what material cover each as preview the need to complete to pass the click discussions to see forums where you can discuss the material with fellow students taking the class be sure to introduce yourself to everyone in the meet and greet forum this should take about weeks to complete you can check out the recommended schedule below to see a quick of the lessons and complete each were excited youre here learning with us lets get started
</DOC>
<DOC>welcome and project visualizing data
welcome to the first of our get started by introducing ourselves and the google engineers who will be making appearances throughout the also give you of the unique series we provide and help you understand how to navigate the to get the most out of it given your background and learning speed finally jump right into objects and designing classes this might be a bit of review for some of you who might have learned this in your first programming if thats the case feel free to jump ahead to the practice quiz at the end of the lets get started
opening title welcome object oriented java programming data structures and beyond welcome object oriented programming in java project prototype your path through the concept challenges what and why in the real world welcome from google engineers introduction classes and objects core defining classes and creating objects when i struggled objects core overloading methods core public vs private in the real world public vs private access
</DOC>

<DOC>memory models scope and starting the project
we hope youre excited about the project that were starting to build we sure are second part of walk you through setting up your system and working through your first so be having fun with it in no time before that though finish going over some of the fundamentals fundamentals of object oriented programming specifically being able to trace code is a key in becoming a stronger programmer like the end of last the first part of might be a bit of a review of material you already learned in your first java programming if thats the case you are always welcome to skip to the first graded on objects memory models and scope
introduction memory models scope and project project project setting up the starter code in eclipse core drawing memory models with primitive data support memory models for primitive types support setting up and running examples in eclipse when i struggled compiling and running code core drawing memory models with objects concept challenge memory models concept challenge memory models support memory model drawing example core introduction to scope concept challenge scope support putting it all together part support putting it all together part project walkthrough
</DOC>

<DOC>graphical output creating guis and displaying data
now that you have the tools to write and trace object oriented code lets get back to developing the project first real part of the project create an interactive graphical map that will display geospatial data this is a highly interactive so make sure youve got eclipse loaded up we encourage you to play around as you watch the some of the code that we use in the is in the demos package in the starter code you set up for this open it up and experiment with it while youre watching the we also encourage you to dive right into the programming project even before watching the if you want the programming instructions are in the last lesson of you can watch a walkthrough of the instructions and also read the stepbystep directions in the accompanying reading theres lots of room for creativity too so have fun
introduction graphical user interfaces guis project programming core graphical user interfaces core using papplet when i struggled guis core resizing images core colors when i struggled documentation support setting up a canvas support drawing happy face support loading and displaying images core why processing support using documentation in the real world documentation core setting up map visualization core adding markers core using live data bonus visualizing life expectancy bonus setting up the map bonus representing data bonus coloring markers support arraylists and generics project programming walkthrough
</DOC>

<DOC>inheritance
now that youre in full swing with the project lets take a closer look at some concepts that you have already been using in your code specifically the keyword extends what exactly does it mean that your extends papplet to answer this question need to dive into the details of how java allows for class hierarchies through inheritance and polymorphism these fundamental and powerful concepts will serve you in the future use these ideas to allow for displaying markers differently if you feel youre already comfortable with inheritance and polymorphism feel free to dive straight into the project programming for as you with the project feel free to have some fun and introduce new levels of class hierarchies for improved functionality
introduction inheritance and polymorphism project programming core why use inheritance core extends in the real world inheritance core reference vs object type when i struggled the is a relationship concept challenge references and objects core visibility modifiers when i struggled inheritance core object creation in java core compiler rules for class construction core variable initialization in a class hierarchy concept challenge inheritance constructors concept challenge inheritance constructors core method overriding core introduction to polymorphism when i struggled polymorphism core rules to follow for polymorphism core casting objects concept challenge polymorphism part concept challenge polymorphism part core abstract classes and interfaces in the real world inheritance project programming walkthrough
</DOC>

<DOC>guis responding to user events
youve reached an exciting point in the project add interactivity to your map be learning how to design eventdriven programs using a new and powerful programming paradigm your map will now respond to mouse hovers and clicks as always make sure youre writing code along with us as you watch the and through the also feel free to dive into the programming project whenever you are ready
introduction responding to user events project programming core introduction to eventdriven programming in the real world events core implementing events in unfoldingmaps core implementing buttons in unfoldingmaps when i struggled buttons and guis core listener hierarchy project programming walkthrough
</DOC>

<DOC>searching and sorting from code to algorithms
youve come a long way and youve got a great project to show for it last shift gears a bit to talk about some very exciting and fundamental algorithms for finding and sorting data in an array searching and sorting algorithms are not only fundamental to computer science but also ideal for beginning to explore issues of algorithm efficiency only begin to touch on issues of algorithm efficiency here say much more about it in the next so we hope continue with us also apply sorting to your project and wrap things up by finishing your project with an extension of your own choosing
introduction searching and sorting project in the real world searching and sorting core linear search part core linear search part core binary search core binary search example when i struggled search core introduction to sorting core selection sort algorithm core selection sort implementation core selection sort analysis concept challenge selection sort core mystery sort core javas builtin sort core comparable interface revisited concept challenge which sort project programming walkthrough end of message
</DOC>
<DOC>
advanced data structures in java
how does google maps plan the best route for getting around town given current traffic conditions how does an internet router forward packets of network traffic to minimize delay how does an aid group allocate resources to its affiliated local partners
to solve such problems we first represent the key pieces of data in a complex data structure about data structures like graphs that are fundamental for working with structured real world data develop implement and analyze algorithms for working with this data to solve real world problems in addition as the programs you develop become more complex examine what makes for good code and class hierarchy design so that you can not only write correct code but also share it with other people and maintain it in the future the backbone project will be a route planning application apply the concepts from each directly to building an application that allows an autonomous agent or a human driver to navigate its environment and as usual we have our different series to help tie the content back to its importance in the real world and to provide tiered levels of support to meet your personal needs
</DOC>
<DOC>introduction to the
welcome to the first in the third of our intermediate java programming once again start with introductions and in particular introduce the unique structure of this also if youre not sure if this is right for you weve got an optional precourse quiz coming right up that can help you figure out if youre in the right place if you decide to stay with us and we really hope weve got a great backbone project for you your very own mapping application inspired by google maps the core data structure throughout this is graphs which may very be the most fundamental data structure in all of computer science ready to begin so are we
welcome your path through this concept challenges project prototype
</DOC>

<DOC>introduction to graphs
start getting technical introducing you to the central data structure in the graphs the basics and then have a chance to dive in a little deeper into the code getting ready to start building that google mapslike application
introduction project introduction to graphs project core whats a graph core graph definitions in the real world graphs at google in the real world more graphs at google core implementing graphs in java core adjacency matrix core adjacency list concept challenge comparing implementations of graphs in the real world performance considerations when i struggled analyzing implementations core neighbors support coding getneighbors support coding hop neighbors support multiplying adjacency matrices project programming walkthrough
</DOC>

<DOC>class design and simple graph search
get the backbone of your map search engine up and running in previous courses including the previous courses youve probably been given most of the classes you needed to complete the but learning how to design classes from scratch is a key that need as you become a more sophisticated java programmer give you the tools you need to create a robust and elegant class design for your map search engine introduce a similar problem and show you how it can be represented as a graph then introduce two core search algorithms depthfirst search and breadthfirst search finally turn our graph problem into a set of java classes your task on the programming will be to do the same thing but in the context on the map search engine
introduction project route finding project core intro to class design when i struggled building useful classes in the real world design patterns core dfs part core dfs part core bfs support developing small examples to test your code when i struggled data structures jargon when i struggled the right data structure for the job concept challenge performance of dfs and bfs core class design when i struggled if you fail to plan when i struggled but dont forget to start in the real world planning ahead with design core refactoring support where to start the project design in the real world why is code refactored project programming walkthrough
</DOC>

<DOC>finding shortest paths in weighted graphs
in the past two weeks youve developed a strong understanding of how to design classes to represent a graph and how to use a graph to represent a map add a key feature of map data to our graph representation distances by adding weights to your edges to produce a weighted graph although this might seem like a small change the algorithms that for unweighted graphs may prove ineffective for weighted graphs to address this problem explore more advanced shortest path algorithms first see how to find the shortest path on a weighted graph then see how to find it more quickly in the project apply these ideas to create the core of any good mapping application finding the shortest route from one location to another
introduction project shortest path core shortest path with bfs core geographic maps core dijkstras algorithm concept challenge performance of dijkstras algorithm core a search algorithm when i struggled tackling large programming projects when i struggled remembering classical algorithms project shortest path programming walkthrough
</DOC>

<DOC>route planning and nphard graph problems
go beyond the problem of finding a path between two points and focus on problems requiring overall path planning for example if you wanted to go on errands and visit different locations before returning home what is the optimal route this problem is actually a really known problem in computer science known as the travelling salesperson problem tsp attempting to solve the problem will lead us to explore complexity theory what it means to be nphard and how to solve hard problems using heuristics and approximation algorithms end the by showing how reformulating a problem can have a huge impact making something which was effectively unsolvable before now solvable
introduction core traveling salesperson problem tsp concept challenge an algorithm for tsp core tsp bruteforce algorithm core tsp algorithm running time core np hard core approximations and heuristics core hamiltonian graphs core eulerian graphs core eulerian graphs an algorithm core an application in bioinformatics
</DOC>

<DOC>end of project extension
you made it to the last of our were glad youre still with us as a reward theres no new content to instead get the to extend your project in a direction of your own choosing we hope youve got some neat ideas for personalizing your map application and we look forward to seeing them in the peer review gallery submitting to the peer review gallery is optional though the extension is required but we hope choose to participate
</DOC>
