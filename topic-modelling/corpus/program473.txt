<DOC>
epic games game design
this is intended for anyone interested in developing a strong foundational understanding of game design learners will get an indepth introduction to the fundamentals of game design unreal engine as a tool level design blueprint scripting visual and audio development and ux and ui design each comes with handson through practice and that build on one another in preparation for the final capstone learners who complete this receive a balance between theory and practice relating to game design using unreal engine this gives learners the to practice their in unreal engine through handson assessments graded and ungraded quizzes and one final in the final taught by industry professionals working in the games industry the that a learner will gain from these are wideranging from management and planning to introductory worldbuilding audio effects level design blueprint scripting ux ui and prototyping this includes practice assessments quizzes and handson graded assessments quizzes and handson handson projectsthe final combines all of the courses the learner will create a delivery game the overall theme and genre of the game can be personalized the learner will also choose the perspective and art style used for the prototype the final builds off the from courses and uses and tool kits from courses through
</DOC>

<DOC>
unreal engine fundamentals
welcome to unreal engine fundamentals your gateway to the world of game design using unreal engine introductory well equip you with essential to navigate unreal engine from a new user to a proficient game designer well start by guiding you through setting up your account downloading the engine and familiarizing you with the interface then well explore quixel megascans asset importing materials world building lighting sound and source control throughout the to sculpt immersive environments implement dynamic lighting basic audio effects and collaborate effectively with team members using source control are you ready to begin your game design journey with unreal engine lets dive in and discover the exciting possibilities this fantastic platform offers this is meant for learners who are looking to the basics of getting started with unreal engine to take this learners wont need any with unreal engine

introduction to unreal engine
introductory we lay the groundwork for your unreal engine journey by guiding you through the essential setup and familiarizing you with the core interfaces and workflow how to install ue navigate the editors ui manage assets and content integrate with quixel bridge for highquality scans and dive into creating basic materials by the end have a strong foundation in ues fundamentals preparing you for more advanced topics
introduction downloading installing unreal engine epic games launcher creating your first navigation within unreal engine content examples unreal engine interface exploration scalability plugins exploring menus world settings exploring menus editor preferences exploring menus settings exploring menus level editor viewport content browser basics content browser favorites collections references redirectors saving deleting documentation where to get help actor transformations lesson recap preview versions introduction to quixel quixel bridge megascans accessing quixel bridge from unreal engine accessing quixel bridge from desktop adding d assets from quixel bridge adding other assets from quixel bridge importing from other sources quixel trees marketplace megascans quixel megascans lesson recap introduction to materials creating your first material modify your first material material instances material properties blend modes material properties shading models texture assets building a pbr material diffuse building a pbr material metallic building a pbr material roughness building a pbr material emissive building a pbr material normals building a pbr material multi switching maps ambient occlusion building a pbr material named reroutes building a pbr material parameter groups building a pbr material uv material function create your own pbr master material master material homework setup optional introduction to unreal engine recap

introduction to world building
this covers the fundamentals of world building in unreal engine including terrain sculpting landscape material creation foliage placement water system tools and asset management techniques gain practical in creating immersive environments from sculpting landmasses to procedurally populating scenes with foliage blending materials and placing meshes effectively
introduction to world building landscape mode basics landscape sculpting basics managing landscapes importing height maps packed textures alpha brushes landscape painting basics landscape uv coordinates landscape micro variation landscape macro variation landscape distance blending landscape distance blending landscape material grass node foliage material instance adjustments foliage mode procedural foliage tools automaterials layers and splines landmass blueprint brushes water tools lakes and rivers quixel blend materials mesh painting mode asset zoo and actor palettes asset placement techniques decals traditional levels world partition introduction to world building recap

introduction to lighting and sound
this equips you with fundamental in lighting and audio for unreal engine explore various lighting techniques from basic light setup to nextgen technology systems like lumen ensuring visually stunning environments additionally the covers essential audio features including audio asset management sound design and tools for creating immersive soundscapes
introduction to light and sound lighting terminology lighting types lighting mobility lighting features and properties environmental lighting sun and sky hdri backdrop post process volumes baked lighting introduction to lumen lumen a practical example introduction to game audio importing audio assets setting up sound cues implementing footsteps sound attenuation basics ambient sounds and d spatialization introduction to light and sound recap

introduction to collaboration and sharing
this covers the essentials of collaboration and sharing in unreal engine with a focus on version control using perforces helix system and techniques for efficient asset management across gain practical in setting up version control managing file revisions and resolving conflicts how to streamlining workflows through asset migration and share your with simple packaging
introduction to collaboration and sharing overview of source control source control basic workflow helix perforce helix perforce within unreal engine helix perforce practical example zipping and simple packaging migrating assets introduction to collaboration and sharing recap

unreal engine fundamentals final
final apply everything youve learned in the to create a compelling and immersive d environment in unreal engine referred to as your unreal paradise this task will involve landscape creation asset integration lighting and audio implementation to bring your scene to life the use of source control is highly encouraged but is optional and will not be used as a marking or grading criteria for successful completion of this final
recap of the gathering reference final overview screen shots screen record submission end of congratulations next steps
</DOC>

<DOC>
user in game design
elevate your game design with our immersive on user interface ui in unreal engine where no prior is necessary though completion of courses is recommended this stands out by blending theoretical insights with handson practice to create exceptional user experiencesbegin by exploring the comprehensive game theory behind user ux focusing on key aspects like game loops camera dynamics and ui design how to ensure accessibility for all players through effective iconography automation and audio design progress to implementing ux features using advanced tools such as niagara vfx and unreal engines ui systems enhancing elements from combat to crafting in the final grasp the intricacies of designing effective game loops with goals ranging from seconds to hours by the end be equipped to design inclusive engaging and dynamic game interfaces that resonate with players and enhance their overall this uniquely integrates theory with practical application ensuring you can create polished playerfocused designs

user game theory
we will discover what user means in game design this process will give you a glimpse into user methodologies and different approaches to game design there are a variety of concepts that apply to all user categories to review and consider during development
user in game design introduction user theory overview what is user in game design usability design development bias curve user game theory review

accessibility design in games
we will discover what accessibility means in game design it will provide examples on how these accessibility features often improve the for all players and not just those who are disabled
accessibility in game design overview vision audio controls difficulty accessibility in games review

user categories
we will discover how to examine the user for different categories of a game while this is not a complete list it is good selection of a few main categories for user game design the whole level design combat design objective design and crafting design user is closely related to full on game design but is more catered toward the players perspective
user categories overview game ux level design ux combat ux objectives ux crafting ux user categories review

establishing a game loop
we will discover how to design a game loop each game has a series of small actions that are consistently repeated this is why it is considered a loop a game loop is broken down in to five time based goal per second goals minute goals minute goals hour goals and long term goals a game loop shows the full circle of what you are trying to portray through a game
establishing a game loop overview per second goals minute goals minute goals hour goals long term goals establishing a game loop review overview congratulations
</DOC>

<DOC>
user interface in game design
unlock the full potential of your game design with our comprehensive on user interface ui in unreal engine designed for aspiring game developers and ui designers this equips you with foundational and advanced techniques to create engaging and intuitive interfaces no prior is needed but its recommended to complete courses for a solid groundingdive into the principles of effective ui design from minimalist and modular approaches to understanding programming paradigms gain handson with unreal engines umg to differentiate between the designer and code graphs and mastering the essentials of ui creation through practical exercises mock up various ui widgets and add functional code and also develop common game components such as world maps loading screens and mini maps what sets this apart is its blend of theoretical insights and practical application all within the unreal engine ecosystem whether youre aiming to enhance player or streamline your design process this will help you build professionalquality user interfaces with confidence

user interface design theory
we will cover user interface design theory there are several key design practices used in the games industry to build effective user interface these methodologies will benefit the players during gameplay and help speed up designers when building user interface
user interface in game design introduction user interface design theory overview user interface examples minimalist design modular design programming paradigms user interface design theory review

unreal motion graphics umg
we will cover the base components to umg in unreal engine user interface in games are broken down in to simple components we will review how to navigate the unreal engine umg common input and panel widget components at the end of this we will review user interface design and prototyping tools
unreal motion graphics umg overview unreal engine widgets common components input components panel components ui design tools and prototyping unreal motion graphics umg review ui mock up

creating modular components
we will create modular templates to help our workflows in the future these modular templates will be reuseable across multiple widgets we create creating modular templates will keep our user interface construction open to the changes during development
creating modular components overview user interface setup button setup button code icon setup icon textures icon import icon variables icon code progress bar setup progress bar variables progress bar code editable text box setup editable text box variables editable text box code window setup move button size button window design options creating modular components review

creating user interface
we will start creating basic user interface that we will use in our future game modes we will about size map optimization and how to avoid circular references by the end of this we will integrate damage healing and a multipurpose statistic change actor during our process of creating user interface will start the creation of our ai to be used for enemies
creating user interface overview size map optimization resource bar setup hud setup character statistics user interface communication modifying character statistics statistic changer actor statistic changer code nameplate setup nameplate code ai setup damaging attack code ai nameplate code ability bar setup ability bar code creating user interface review overview congratulations
</DOC>

<DOC>
game development and prototyping
be introduced to game development and prototyping for games courses are highly recommended while courses create the foundational unreal engine assets and code used throughout this this requires no previous and aimed at beginners this explores different game modes stealth survival platformer capture the flag action combat crafting and story this will include a preproduction phase where learners will break down the design of each mode using obsidian understanding the core gameplay each mode is intended to design this preproduction phase will not only outline gameplay features but also how you can reuse assets and code for quick prototyping after preproduction there is a dedicated to creating each game mode this will include game modespecific code design and iteration by the end of this package your to be in a visually presentable format for your portfolio

preproduction
this is all about planning before a game begins there are numerous decisions that you need to think about it is important to seek out games that are similar in design look for success and failure stories from developer interviews our industry loves to share knowledge through convention talks dev logs on youtube and through communities like discord during preproduction it is important to identify your early goals for development and in phases dont try to fully build specific features always focus on the core game loop it is important to keep it in specific design targets where you can take a moment and play what you are making from there you can adjust iterate and further understand your progression
game development and prototyping introduction preproduction overview obsidian game mode references scope stealth survival scope platformer scope action combat scope capture the flag scope crafting scope story scope shared systems converting scope to level design tasks converting scope to system tasks preproduction review

implementation
we will implement all the game mechanics we need to start prototyping each game mode we will create specific features that we can enable or disable for our game design needs this is built to give you a broad understanding on how to implement mechanics and systems in the future
implementation overview movement combat and stealth state stealth coverage state stealth coverage actor blender sword and shield twohanded bow rifle stealth attacks magic platformer attack setup platformer attack polish keybind planning ability bar redesign keybinds user interface keybinds enhanced input keybinds ability code the collision detection problem melee attack setup kick attack setup montage notify function melee hit function montage notify projectile attack setup projectile hit code projectile expose on spawn projectile polish projectiles hitting the environment area of effect magic area of effect melee grenade setup projectile explosion area of effect function weapon select setup interact setup interact communication equip weapon teleporter setup teleporter implementation teleporter child actors knockback jump pad death animation player death setup death widget implementation death widget polish respawn new pawn respawn revive respawn polish ai spawner puzzle setup puzzle passcode puzzle polish regeneration player error widget ability costs cooldown setup icon cooldown cooldown communication ai aggro ai leash ai player detection ai move to function player noise setup player noise implementation ai aggro on hit move function to parent class enemy child classes enemy weapon setup enemy attack setup enemy attack polish enemy attack implementation enemy attack rotation team setup patrol marker setup ai patrol setup ai patrol code ai patrol polish nameplate polish loot setup inventory add check inventory function inventory remove inventory widget setup item widget setup inventory widget implementation crafting setup crafting widget recipe widget crafting widget code crafting widget implementation crafting station quest setup quest widgets quest update function quest add function narrative setup narrative widget narrative implementation flag setup flag home setup scoreboard player housing setup player housing code implementation review

game modes
it is time to put everything youve learned to the test everything from all the way through to be tasked to design one of each game mode stealth survival platformer capture the flag action combat crafting and story understanding game design for multiple genres is part of creating innovative new ideas when two seemingly opposite genres get combined together it sparks something new try to take a loose approach at what you create think about the ambience for your level decide what game mechanics do you choose to keep or improve for each game mode
game modes overview stealth survival platformer capture the flag action combat crafting story game modes review

reflection
your final for is to design a small game with complete creative freedom try to keep it simple think about one two or three core gameplay mechanics to focus on your designs should focus on supporting those features perhaps one of your previous game modes sparked your interest and you can take it to the next level by expanding it further you can try combining different game genres that you rarely see used together maybe there is a game type that wasnt discussed that you are really interested in prototyping use obsidian to plan your designs and scope accordingly look for references and complete research on similar genres your limits are only bound to your imagination
final reflection review
</DOC>

<DOC>
introduction to game design
this introduces the fundamentals of games and delves into the intricate art of game design exploring concepts from generating original game ideas to crafting comprehensive design documents throughout the learners will discover the iterative process of game development emphasizing teamwork and reflection as essential components of creating compelling interactive experiencesthis is for learners of any level who want an introductory understanding of the game industry

what is game design
be all about games and in particular what we mean when it comes to game design
genres of games action and adventure shooters role playing games platformers how to find and cultivate fun roles in a development studio paths art vs design specialities indie vs aaa studio different roles in game design responsibilities skillset

designing your first game
in your second be how to generate ideas and put together a pitch proposal for an original game idea
where do ideas come from brainstorming pillars of game design market research audience research technical research identifying scope what is the aim of balancing a game how to be fair to the player how do we keep players engaged how do we entertain players what is a design methodology waterfall methodology agile methodology double diamond what is a pipeline identifying target market swot analysis pitch decks presenting a pitch deck

the iterative process
the third and of the learners will be taught about the iterative design process of games development and how we in teams to produce content and reflect on content also begin working towards your design document for your own game idea
iteration cycle working in a team source control roadmaps prototyping

design documentation
final be putting together your game design document for your original game idea what a game design document includes and how to use it to communicate ideas to peers
what is a game design document how are game design documents used keeping organized reviewing an example
</DOC>

<DOC>
blueprint scripting
the blueprint visual scripting system in unreal engine is a visual programming language that uses a nodebased interface to create gameplay elements the nodebased workflow provides designers with a wide range of scripting concepts and tools that are generally only available to programmers in addition blueprintspecific markup available in unreal engines c implementation provides programmers with a way to create baseline systems that designers can extend this is primarily aimed at first and secondyear undergraduates interested in engineering or science along with high school students and professionals with an interest in programmingthis introduces learners to the blueprint visual scripting system participants will blueprint basics how they relate to c and blueprint programming principles and will use their knowledge to create an interactive door for a game this does not require learners to have any previous knowledge about blueprint scripting to get started it is recommended that the learner take courses through before starting this

introduction to visual scripting with blueprints
learners will be introduced to blueprints unreal engines visual programming language that uses a nodebased interface to create gameplay elements
introduction blueprint interface blueprints as designer tools strengths and limitations of blueprints reading nodes components relationship between blueprints and c functions and variables variable types inheritance logic and flow control making a door timelines moving the door locking and unlocking event dispatchers construction script infinite loops timers challenge intro door direction

blueprint communication
about traces the way that blueprints communicate with each other in unreal engine and combine traces and triggers to build additional interactive elements for a game
traces trace types trace channel object traces single and multi traces hit results interfaces inputs print string overlaps casting trigger class button trigger lever trigger challenge intro elevator

characters controls and cameras
learners will be introduced to actors pawns and characters and how to utilize input actions to communicate between the input system and their code an input action can be anything that an interactive character might do like jumping or opening a door or it can be used to indicate user input states like holding a button that changes walking movement to running learners will create their own custom logic for a game character
character class player controller crouching control rotation camera and spring arm switching cameras enhanced input actions triggers and modifiers

creating mechanics
learners will be introduced to how create mechanics in games and devise their own solutions for gameplay this will include completing a simplified inventory system and management of said system
data assets inventory component picking up items using items enums widget place item trigger
</DOC>

<DOC>
visual development and audio design in games
be introduced to visual and audio development for games about d models animation visual effects vfx and sound effects sfx this covers a variety of artrelated topics that will help in your process to design prototype and better visualize new ideas by the end be able to identify key art styles lighting and camera features used in games create modify paint and uv d models use and create niagara vfx and sfx for game design understand technical animation how to implement animation in unreal engine

introduction to art styles
welcome to the introduction to art styles we will explore art styles camera perspectives and lighting in game design this will help you breakdown the art style of a game and how it can impact game design
introduction introduction to art styles realism vs stylized camera perspectives camera mechanics stylistic choices lighting in game design meet and greet introduction to art styles review

introduction to animation
we will cover technical animation and unreal engines animation systems we will create a new as a foundation to be used for future game prototyping we will import an assortment of mixamo assets as a base animation kit
animation overview animation blueprints animation assets procedural animation and motion capture setup mixamo setup unarmed blendspace animation blueprint event graph animation blueprint anim graph character input strafe character input dodge blendspace character input dodge implementation character input dodge polish jump shield blendspace two handed blendspace rifle blendspace bow blendspace stealth blendspace animation stance idle poses basic attack animations basic attack montages animation blend per bone block montages air dash code comments introduction to animation review

introduction to d modeling
we will cover what is a d model and how it is broken down in to triangles we will review optimization techniques to help make a game run with smooth framerates we will walkthrough the development of a d model from sketch creation and implementation we will import addition free d models to use in our redesign of the stylized egypt level
introduction to d modeling what is a d model optimization techniques importing weapons weapon swap setup weapon implementation a weapon implementation b unreal engine modeling tools d modeling preproduction d modeling production environment assets d model code comments introduction to d modeling review stylized egypt redesign

visual effects and audio design
we will review what the niagara vfx system is in unreal engine and how it is broken down in to niagara emitters and niagara systems we will also take a look a implementing common audio design components through your level and character
overview of visual effects audio design vfx in unreal engine using niagara systems common niagara emitter settings niagara compatible materials for mesh sfx imports ambient audio footstep audio design attack audio design visual effects vfx and audio design review

visual development and audio design wrap up
peer review discussion prompt
overview congratulations
</DOC>

<DOC>
fundamentals of level design with unreal engine
embark on a journey into the heart of game design through our level design discover the art and theory that shapes player examining realgame examples to understand the nuances of level design from singleplayer to multiplayer grasp the principles that make each unique and engagingcraft your level design for different game scenarios creating personalized design documents that foster collaborative team efforts dive into the collaborative process mastering the creation of comprehensivelevel design documents that ensure a shared vision among team members the handson transformation of your conceptuallevel sketches into playable environments using unreal engine explore the greyboxing process with unreal engines tools and follow best practices to bring your levels to life with lighting and traversal by the end of the confidently apply level design theory turning your creative ideas into tangible results in unreal engine join us in unlocking the potential of your game design journey this is intended for learners who are interested in an introduction to level design without having any it is recommended that learners complete and certification before starting

level design fundamentals
level design is an important part of designing a game and can directly affect how your players move react or even feel while playing a game this content will look at level design from a game design perspective covering the important facets of level design theory it will overall what level design is and the role it plays in the game industry then move into the theory behind it how can a level affect how a player is guided through a level or game what controls where they go or how quickly they can move through the game how is all this different between single and multiplayer levels all of this answered by looking at real game levels this content will give learners a solid foundation of level design theory that they will then further apply to future content
introduction the goals of level design level design and game design types of levels what does level design do narratives drama challenge beauty truthepiphany player flow lesson introduction the player engagement loop beats and intensity sight sound touch understanding and affordances cognition narrative mechanics how to look at levels charting tools measuring levels metanarrative

design theory for specific types
depending on the level you are creating the way you apply level design theory can change single player levels apply the same theories differently than multiplayer levels or openworld levels this content will look at different types of levels and discuss how the theory might be applied and how to represent that theory in a design document in the end the learner will be able to take what they learned and create a small level on paper for their design document
lesson introduction introduction level intentions level shaping basic pathing changing the route adding interest enclosures and cover gating critical path design for multiplayer biomes vistas diagram establishing scale and legend massing part massing part massing next steps wayfinding conclusion

documenting level design
when working in a team setting most likely be working with multiple developers on a single level in order to plan the level out and make sure everyone stays within the same vision you make a level design document this document holds all the information that anyone working with the level would need to know this content will cover creating a level design document defining what it is walking the learner through the steps and process of creating one from scratch of a level of their own choosing
documenting level designs the level design document collaboration types of level design diagrams game development testing types of testing milestones and testing qualities of tests fault testing data collection and ethics conclusion

grayboxing in unreal engine
before a level is made or even art is created for it it first needs to be drafted and tested taking a sketch of a level this content will walk through the steps of greyboxing the level learners will take a level sketch and translate it into a real level in unreal engine theyll use builtin unreal engine tools to create the level while following best practices for level design with unreal engine at the end of the content they should have a lit transversable level in unreal engine based on the sketch they made
part building your level in unreal what is greyboxing why use unreal engine lesson introduction ready materials setting scale landscape primitives modelling mode geometry tools exporting external assets materials for level design lighting for level design playtesting levels reflecting and iteration unreal editor for fortnite and conclusion
</DOC>

