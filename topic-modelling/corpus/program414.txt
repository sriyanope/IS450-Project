<DOC>
google it automation with python
this beginnerlevel sixcourse developed by google is designed to provide it professionals with indemand including python git and it automation that can help you advance your
knowing how to write code to solve problems and automate solutions is a crucial for anybody in it python in particular is now the most indemand programming language by employersopens in a new tab
this builds on your it foundations to help you take your to the next level its designed to teach you how to with python and how to use python to automate common system administration tasks also to use git and github troubleshoot and debug complex problems and apply automation at scale by using configuration management and the cloud
this can be completed in about months and is designed to prepare you for a variety of roles in it like more advanced it support specialist or junior systems administrator positions upon completion you can share your information with potential employers like deloitte target verizon and of google
we recommend that you have python installed on your machine for some courses need a computer where you can install git or ask your administrator to install it for you
if youd like to the fundamentals of it support check out the beginner level google it support certificateopens in a new tab
check out all google hereopens in a new tab

how to with python with no previous knowledge of coding required and use python to automate common system administration tasks
to use git and github to troubleshoot and debug complex problems
apply automation at scale by using configuration management and the cloud
practice your technical with handson projects including a capstone project where use your new knowledge to solve a realworld it problem
</DOC>

<DOC>
introduction to git and github
how to keep track of the different versions of your code and configuration files using a popular version control system vcs called git also go through how to set up an account with a service called github so that you can create your very own remote repositories to store your code and configuration
throughout this about gits core functionality so you can understand how and why its used in organizations look into both basic and more advanced features like branches and merging demonstrate how having a working knowledge of a vcs like git can be a lifesaver in emergency situations or when debugging and then explore how to use a vcs to with others through remote repositories like the ones provided by github by the end of this be able to store your codes history in git and collaborate with others in github where also start creating your own portfolio in order to follow along and complete the assessments need a computer where you can install git or ask your administrator to install it for you

introduction to version control
be introduced to the concept of version control which will make managing and rolling back your code look super easy how to differentiate between files and the tools at your disposal to make this happen next be introduced to git and how you can leverage that platform to improve your coding abilities once youve got a grasp on what git is install it and start using it to create and clone code repositories last up deep dive into git in order to get more familiar with the different tools and commands it has to offer
introduction intro to version control keeping historical copies diffing files applying changes practical application of diff and patch what is version control version control and automation what is git installing git installing git on windows optional first steps with git tracking files the basic git workflow anatomy of a commit message wrap up intro to version control

using git locally
dive into advanced git interactions by skipping the staging area for small code changes and understand how git uses the head alias to represent checkedout snapshots next explore how to move and remove files before finally getting a study guide to help you in your git explorations the next step of your learning will include how to undo changes before committing and how to amend commits once theyre submitted finally be able to identify errors in commits that were submitted a while back in the final section of this explore the concept of branching and merging what a branch is how to create one and how they in harmony with you and your code once youre comfortable with branching dive into merging how it works with branched data and how to deal with merge conflicts
intro to using git locally skipping the staging area getting more information about our changes deleting and renaming files undoing changes before committing amending commits rollbacks identifying a commit what is a branch creating new branches working with branches merging merge conflicts wrap up using git locally

working with remotes
be introduced to github and how it works with git create new repositories and clone those repositories onto your computer next explain what a remote repository is how we can with them and how we can host them get familiar with commands like modify stage and commit which will be used for local changes as as the fetch command which can pull any changes from remote repositories cover secure shell protocol and when to use api keys our final lesson will focus on learning about conflicts this will allow you to explore the concepts of pullmergepush workflows pushing remote branches and rebasing your changes
intro to working with remotes what is github basic interaction with github what is a remote working with remotes fetching new changes updating the local repository the pullmergepush workflow pushing remote branches rebasing your changes another rebasing example best practices for collaboration wrap up working with remotes

collaboration
continue to explore the collaboration tools available in git about the tools that are available to help improve the quality of your code and to better track your code this includes an of pull requests and how the typical workflow of a pull request looks like on github next dive into how you can squash changes in your code finish up by providing you with a study guide on fork and pull requests next up cover what code reviews are and what the code review workflow looks like then about how to use code reviews on github the final lesson of this will focus on managing projects take a rundown of best practices on managing projects and how to manage collaboration within those projects explore different ways of tracking issues and finish up by discussing the concept of continuous integration with your projects
intro to collaboration a simple pull request on github the typical pull request workflow on github updating an existing pull request squashing changes what are code reviews the code review workflow how to use code reviews in github managing collaboration tracking issues continuous integration wrap up collaboration congratulations sneak peek of the next
</DOC>

<DOC>
crash on python
this is designed to teach you the foundations in order to write simple programs in python using the most common structures no previous exposure to programming is needed by the end of this understand the benefits of programming in it roles
understand basic python syntax
explore different code editors and developer environments
be able to write simple programs using python
figure out how the building blocks of programming fit together
and combine all of this knowledge to solve a complex programming problem
start off by diving into the basics of writing a computer along the way get handson with programming concepts through interactive exercises and realworld examples quickly start to see how computers can perform a multitude of tasks you just have to write code that tells them what to do

hello python
introduce you to the coursera platform and the format then dive into the basics of programming languages and syntax as as automation using scripting also introduce you to the python programming language and cover some basic functions and keywords of the language along with some arithmetic operations lastly go over some code editors and ides that you can use to write python code
introduction introduction the beginning of your programming journey what is programming what is automation getting computers to for you what is python why is python relevant to it other languages hello world getting information from the user python can be your calculator code editors and ides use the commandline use jupyterlab and jupyter notebooks use colab use vs code first steps wrap up meet marga the curriculum developer

basic python syntax
about different data types in python how to identify them and how to convert between them also how to use variables to assign data and to reference variables deep dive into functions how to define them pass them parameters and have them return information explore the concepts of code reuse code style and refactoring complex code along with effectively using code comments finally about comparing data using equality and logical operators and leveraging these to build complex branching scripts using if statements
basic python syntax introduction data types expressions numbers and type conversions defining functions returning values the principles of code reuse code style comparing things branching with if statements else statements elif statements in margas words why i like python basic syntax wrap up

loops
explore the intricacies of loops in python how to use while loops to continuously execute code as as how to identify infinite loop errors and how to fix them also to use for loops to iterate over data and how to use the range function with for loops also explore common errors when using for loops and how to fix them
introduction to loops what is a while loop more while loop examples why initializing variables matters infinite loops and how to break them what is a for loop more for loop examples nested for loops common errors in for loops what is recursion optional recursion in action in the it context loops wrap up in margas words how i got into programming

strings lists and dictionaries
dive into more advanced ways to manipulate strings using indexing slicing and advanced formatting also explore the more advanced data types lists tuples and dictionaries to store reference and manipulate data in these structures as as combine them to store complex data structures
basic structures introduction what is a string the parts of a string creating new strings more string methods formatting strings what is a list modifying the contents of a list lists and tuples iterating over lists and tuples list comprehensions list comprehension vs for loops what is a dictionary iterating over the contents of a dictionary dictionaries vs lists oop introduction optional instance methods optional basic structures wrap up in margas words my most challenging script

final project
how to apply a problemsolving framework to tackle a challenging project how to formulate a problem statement to understand a challenge conduct some research to see what options are available then begin planning how you to solve a problem
final project introduction problem statement research planning writing the script putting it all together congratulations sneak peek of the next
</DOC>

<DOC>
automating realworld tasks with python
in the final tie together the concepts that youve learned up until now tackle realworld scenarios in qwiklabs that will challenge you to use multiple at once
first take a closer look at how to use external python to extend your codes capabilities and spend some time learning how to use documentation to a new for example use the python image library pil to create and modify images show you some simple examples of how to perform common tasks in the material but it will be up to you to explore the documentation to figure out how to solve specific problems next show you how to communicate with the world outside of your code use data serialization to turn inmemory objects into messages that can be sent to other programs your will send messages across the network to application programming interfaces apis offered by other programs for those times when your code needs to talk to a person instead of a also to send email messages at the end of this be able to take a of a problem and use your to create a solution just like you would on the job in your final capstone project be given a of what your customer needs and it will be up to you to create a to do it

manipulating images
be introduced to distributed systems and non abstract large system design or nalsd cover builtin verse external libraries and go over apis next loop back to how to generate and manage containers this time focusing on vs studio and docker how to use pil for working with images finally put what you learned into action in a lab where scale and convert images using pil

interacting with web services
about web applications and services and apis cover restful apis and rest architecture as as how to use rest apis to access web data more about flask and data serialization next dive into the python requests library and cover different request methods like http get and post finally be introduced to django a full stack web framework complete a lab that uses django to process text files with python dictionaries and upload to a running web service

automatic output generation
about logging the logging and exception handling be introduced to the python email library and how to add attachments and send emails through the smtp server next cover generating pdfs and how to add tables and graphics finally put all of this together in a lab where generate a pdf and send it via email

putting it all together
complete the final project go over the project problem statement and provide you with some resources to solve the problem and complete the project put everything you have learned throughout this into action by automating updating catalog information lab write a script generate a pdf automatically send that pdf via email and write a script to check the health status of the system
nathalia driving impact with ai in the workplace boost your it support with ai leverage ai for faster troubleshooting communicate technical concepts with ai automate routine it tasks with ai simplify it documentation using ai use ai to identify it security risks introducing google ai essentials outtakes

resources
explore job readiness and other job related resources more about working from home and advanced communication also cover imposter syndrome and burnout and provide tips that you can use throughout your
</DOC>

<DOC>
troubleshooting and debugging techniques
give you the tools to quickly identify and solve realworld problems that you might come across in your it role look at a bunch of different strategies and approaches for tackling the most common pitfalls of your code and it infrastructure strategies for approaching almost any technical problem and then see how those apply to solving different realworld scenarios
we picked examples that include general system issues issues with software that someone else wrote and issues with programs that we wrote talk about problems that can affect any operating system and also look at challenges specific to certain platforms and scripting languages we strongly recommend that youve taken the prior courses or already have knowledge of python and linux so that you can follow along with our troubleshooting examples

troubleshooting concepts
be introduced to the fundamentals of troubleshooting and different strategies and approaches to tackle problems that you might encounter about the concept of debugging and how debugging is one of the core principles of troubleshooting be introduced to some tools that will help you in the debugging process like tcpdump ps top itrace and lots more next explore how to understand the problem this might sound like a no brainer but its not as easy as you might think next dive into the different approaches when troubleshooting reproducing errors versus intermittent errors finally about binary searching a problem explore the different types of searches including binary and linear searches then about the concept of bisecting and how it can be used in your troubleshooting approach and finish up with finding invalid data in a csv file
introduction intro to troubleshooting concepts what is debugging problem solving steps silently crashing application it doesnt creating a reproduction case finding the root cause dealing with intermittent issues intermittently failing script what is binary search applying binary search in troubleshooting finding invalid data wrap up troubleshooting concepts

slowness
about what factors can cause a machine or to act slowly dive into ways of addressing slowness by identifying the bottleneck that might be causing the slowness about tools to identify which resources are being exhausted including iotop iftop and activity monitor in macos next how computers use resources and understand the differences between cpu ram and cache in order to help you find the possible causes for slowness in our machines or scriptsnext up how to write efficient code then explore profilers to help you identify where your code is spending most of its time next dive into data structures and understand which ones are right for you to use these include lists tuples dictionaries sets and expensive loops then dive into complex slowness problems and how utilizing concurrency and adding a caching service can improve the execution of your code finally understand how using threads can make the execution of your code much quicker
intro to slowness why is my computer slow how computers use resources possible causes of slowness slow web server writing efficient code using the right data structures expensive loops keeping local results slow script with expensive loop parallelizing operations slowly growing in complexity dealing with complex slow systems using threads to make things go faster wrap up slowness

crashing programs
get introduced to the age old question why has my crashed how to troubleshoot system crashes and application crashes what tools can be used to help identify the cause of the crash and what log files to look at in order to find what might have gone wrong next dive into investigating why code crashes and what you can do to prevent that from happening then explore what happens when an unhandled error occurs and throws an exception about several debugging techniques which will help you identify these errors and exceptions finally explore the concept of handling crashes and incidents at a much larger scale delve into a scenario where a large ecommerce site will throw an error of the time once that issue has been fixed understand the importance of communication and documentation during these incidents and how writing a post mortem can prevent issues from happening again
intro to crashing programs systems that crash understanding crashing applications what to do when you cant fix the internal server error accessing invalid memory unhandled errors and exceptions fixing someone elses code debugging a segmentation fault debugging a python crash crashes in complex systems communication and documentation during incidents writing effective postmortems wrap up crashing programs

managing resources
how to manage your applications dive into some common issues that may cause your application to crash also understand what memory leaks are and how to troubleshoot and prevent them up next run down managing disk space see some scenarios of how this happens and how to identify what process or application is taking up all your disk space then what network saturation is how it can be caused and some useful tools and techniques to solve a network saturation problem next shift from managing applications to managing your time get tips on how to prioritize tasks estimate how long a particular task will take before finishing and communicate expectations when dealing with important tasks the final lesson delves into how to deal with hard and complex problems by breaking it down into small digestible chunks while keeping your eyes on a clear goal that using proactive approaches like continuous integration can help you with future issues that might come up also explore how to plan for future resource usage by making good use of monitoring
intro to managing resources memory leaks and how to prevent them managing disk space network saturation dealing with memory leaks getting to the important tasks prioritizing tasks estimating the time tasks will take communicating expectations dealing with hard problems proactive practices planning future resource usage preventing future problems wrap up managing resources congratulations sneak peek of next
</DOC>

<DOC>
configuration management and the cloud
unlock the potential of automation for computer fleet management in our allencompassing whether youre new to the field or seeking to expand your this provides a solid foundation in automation techniques offering a pathway to becoming a versatile it prepared to launch and support modern cloud based applications and systems
start by discovering the art of automating computer deployment and management in a cloudbased environment then delve into the world of containerization with docker and container orchestration with kubernetes next gain expertise in configuration management tools and techniques to ensure system consistency and reliability explore the world of monitoring enabling proactive responses to potential issues finally embrace the devops culture as you the principles of cicd become proficient in the art of automating software delivery pipelines ensuring efficiency quality and consistency

automating with configuration management
be introduced to the concept of automation at scale and how it can be successfully achieved what it means to at scale and how automation is needed to scale effectively next be introduced to configuration management the differences between unmanaged and managed configuration management then dive into infrastructure as code and about the benefits it brings like making your fleet of nodes more reliable and repeatable this is a major benefit when managing systems at scale in the next lesson be introduced to puppet how to apply basic configuration management and how puppet agents and masters interact with each other next do a rundown of puppet resources and classes how resources are basic units for modeling your configurations and how classes are a collection of resources used to achieve a single goal the final lesson will introduce you to the building blocks of domainspecific language what puppet facts are and how it uses a called facter to analyze store and gather this information your final lesson will cover the driving principles of configuration management about declarative procedural and idempotent principals and how they differ from each other
introduction intro to automating with configuration management what is scale what is configuration management what is infrastructure as code what is puppet puppet resources puppet classes what are domainspecific languages the driving principles of configuration management wrap up automating with configuration management

deploying puppet
dive into deploying puppet on your local machine once youve completed that task start creating and applying puppet rules managing resource relationships and organizing your puppet which are a collection of manifests and associated data next about puppet nodes and node definitions and how theyre used to apply rules to your fleet then dive into the puppet infrastructure which explores the logic behind how the server can trust that a client is really who it claims to be this topic will introduce the concepts of public key infrastructure and secure socket layer which can ensure the clients can be trusted once youve understood these concepts get to see a puppet deployment in action your final lesson will center on updating modifying and testing manifests that youve deployed to your fleet explore puppet parser validate commands that will allow you to check the syntax to ensure its correct next explore the difference between production and testing environments and how you can safely roll out changes to the testing environment to catch any errors also about development environments and how you can siphon part of your fleet to an earlyadopters or canary track to roll out changes modification or updates to that subset of machines
intro to deploying puppet applying rules locally managing resource relationships organizing your puppet puppet nodes puppets infrastructure setting up puppet clients and servers modifying and testing manifests safely rolling out changes and validating them wrap up deploying puppet

automation in the cloud
about cloud services and the different types of cloud services like saas paas and iaas next about scaling in the cloud and how to modify the capacity of your service about horizontal and vertical scaling which then ties into automatic versus manual scaling next explore how much control you have over your system depending on whether you choose saas paas or iaas and assess which one is right for your business rundown the options available to migrate your business to the cloud using strategies like lift and shift in the next lesson how to manage instances in the cloud by creating one explore the different options available like regions machine types and lots more then look into customizing and templating virtual machines to enable you to deploy them at scale our final lesson will explore the concept of automating cloud deployments about load balancers which ensure that each node receives a balanced number of requests as as autoscaling which shuts nodes on and off as needed next about orchestration and how orchestration and automation differ last up about infrastructure as code iac or machine readable configuration files that automate configuration management
intro to automation in the cloud cloud services scaling in the cloud evaluating the cloud migrating to the cloud spinning up vms in the cloud creating a new vm using the gcp web ui customizing vms in gcp templating a customized vm cloud scale deployments what is orchestration cloud infrastructure as code wrap up automation in the cloud

managing cloud instances at scale
all about storing data in the cloud rundown the different types of storage available like block storage and object storage and how they differ explore load balancing further and dive into some load balancing techniques like roundrobin dns and sticky sessions next dive into change management including the different ways to test your changes and how to push them explore different testing methods like unit tests and integration tests also cover continuous integration the use of continuous deployment and how to apply ab testing next up look at some errors you might encounter along the way like quotas or limits and how best to avoid or prepare for these in the next lesson get an understanding of monitoring and altering and review some systems that offer it then dive into the concept of slas and how to set achievable ones next look at basic monitoring in gcp and create altering policies set up conditions and choose aggregators to manage the data the last lesson will explore troubleshooting and debugging our systems how to troubleshoot and debug remotely understand techniques for how to identify where the failure is coming from and how to recover from a failure when it strikes
intro to managing cloud instances at scale storing data in the cloud load balancing change management understanding limitations getting started with monitoring getting alerts when things go wrong servicelevel objectives basic monitoring in gcp what to do when you cant be physically there identifying where the failure is coming from recovering from failure wrap up managing cloud instances at scale congratulations
</DOC>

<DOC>
using python to interact with the operating system
by the end of this be able to manipulate files and processes on your computers operating system also have learned about regular expressions a very powerful tool for processing text files and get practice using the linux command line on a virtual machine and this might feel like a stretch right now but also write a that processes a bunch of errors in an actual log file and then generates a file thats a super useful for it specialists to know
kick off by exploring how to execute python locally and organize and use code across different python files then how to read and write different types of files and use subprocesses and input streams also dive into bash scripting and regular expressions both very powerful tools for anyone working with systems even touch on automatic testing which allows us to automate how we check if our code is correct to finish put all this together by using the tools that weve acquired to process data and generate automatic reports also explain how to set up your own developer environment in your machine this is a key step in being able to write and deploy powerful automation tools

getting your python on
about the different types of operating systems and how you can get your python code ready to interact with the operating system about getting your environment set up and installing additional python that will help you along the way rundown interpreted versus compiled language and how they differ from each other dive into the benefits of automation and point out common pitfalls so you can avoid them finally about qwiklabs which will be used for graded assessments
introduction intro to getting your python on getting familiar with the operating system getting your computer ready for python setting up your environment on windows optional setting up your environment on macos optional setting up your environment on linux optional interpreted vs compiled languages how to run a python script your own python what is an ide benefits of automation pitfalls of automation practical automation example wrap up getting your python on

managing files with python
about reading and writing to files and the commands that will enable you to do this the importance of managing files and how we can navigate through different directories understand how to with files and how there is a layer of abstraction between python and the operating system finally dive into learning about csv files and how to best utilize them
programming with files reading files iterating through files writing files file paths how to write file paths in code working with files more file information directories what is a csv file reading csv files generating csv reading and writing csv files with dictionaries what is qwiklabs wrap up managing files with python

regular expressions
about what a regular expression is and why you would use one dive into the basics of regular expressions and give examples of wildcards repetition qualifiers escapare characters and more next up explore advanced regular expressions and deep dive on repetition qualifiers tackle new exercises like capturing groups and extracting pids using regexes finally provide a study guide to serve as your goto guide for regular expressions
intro to regular expressions what are regular expressions why use regular expressions basic matching with grep simple matching in python wildcards and character classes repetition qualifiers escaping characters regular expressions in action capturing groups more on repetition qualifiers extracting a pid using regexes in python splitting and replacing wrap up regular expressions

managing data and processes
about reading and writing to data files based on an interaction with the user along the way dive into standard streams environment variables and command line arguments next jump into python subprocesses including system commands and how they can be used review how to obtain output from a system command and dive into subprocess management including how to check exit values and manipulate the normal versus error exit values finally rundown processing log files and will cover what a log file is how to filter log files using regular expressions and how to understand the output captured from log files
intro to managing data and processes reading data interactively standard streams environment variables commandline arguments and exit status running system commands in python obtaining the output of a system command advanced subprocess management what are log files filtering log files with regular expressions making sense out of the data wrap up managing data and processes

testing in python
how to create tests in python cover what testing is all about and dive into the differences between manual versus automated testing next explore what unit tests are intended to do and how to write them then about other test concepts like black box versus white box tests and how testdriven development can frame how you design and write your code finally about errors and exceptions and how to combat them
intro to testing in python what is testing manual testing and automated testing unit tests writing unit tests in python edge cases additional test cases black box vs white box other test types testdriven development the tryexcept construct raising errors testing for expected errors wrap up testing in python

bash scripting
be exposed to what the linux os has to offer and about bash scripting go over basic linux commands and explore the many processes linux has to offer including a key concept called redirection then deep dive into creating bash scripts using variables and globs finally about advanced bash concepts and develop an understanding of when to use bash versus python
intro to bash scripting basic linux commands redirecting streams pipes and pipelines signaling processes creating bash scripts using variables and globs conditional execution in bash while loops in bash scripts for loops in bash scripts advanced command interaction choosing between bash and python wrap up bash scripting

final project
put everything youve learned so far into action apply your scripting knowledge to tackle a challenging final project writing a script that scans for a specific error in the log files create a problem statement to understand the challenge conduct some research to see what options are available then begin planning how you intend to solve the problem lastly write the code to implement your solution
intro to your final project writing a script from the ground up project problem statement help with research and planning what is your identity congratulations sneak peek of the next
</DOC>

